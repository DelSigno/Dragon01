package com.dragon.android.objects;


import android.content.Context;

import com.dragon.android.R;
import com.dragon.android.data.IndiceArray;
import com.dragon.android.data.Vec2;
import com.dragon.android.data.VertexArray;
import com.dragon.android.framework.OrthoCamera;
import com.dragon.android.objects.geometry.Square;
import com.dragon.android.util.TextureHandler;

public class DragonHead implements DrawCollection {
	
	//PROPERTIES
	private float direction = 0.0f;
	private Vec2 position = new Vec2(0,0);
	
	//STATICS
	private static final float SIZE = 0.5f;
	private static final long ANIMATION_SPEED = 250; //in miliseconds
	private static final float SPEED = 1.0f;
	private static final float TURN_SPEED = 0.05f;
	
	//MOVEMENT
	private boolean targeting = false;
	private Vec2 target = new Vec2(0,0);
	
	//GRAPHICS
	private VertexArray vertexArray;
	private VertexArray textureVertexArray;
	private IndiceArray indiceArray;
	private int texture;
	
	//MERCTIMER
	private MercTimer mercTimer = new MercTimer(6,ANIMATION_SPEED);
	
	public DragonHead(Context context){
		
		this.vertexArray = new Square(SIZE).getVertexArray();
		this.vertexArray.bindToBuffer();
		
		this.texture = TextureHandler.loadTexture(context, R.drawable.dragon_head);
		
		indiceArray = new IndiceArray(new short[]{0,1,2,2,3,0},true);
		
		
		
		
	}
	
	public void setDirection(float nDir){
		direction = nDir;
	}
	
	public void setTarget(Vec2 nTarg){
		target = nTarg;
	}
	
	public boolean setTargeting(boolean nTarg){
		targeting = nTarg;
		return targeting;
	}
	
	public void updatePos(){
		
		if (targeting) {
			 if (position.getDirectionTo(target).getAngle() < direction){
				 direction -= TURN_SPEED;
			 }else if (position.getDirectionTo(target).getAngle() > direction){
				 direction += TURN_SPEED;
			 }
		}
		
		position.moveAngle(SPEED, direction);
				
	}

	@Override
	public void draw() {
		// TODO Auto-generated method stub
		
	}


	@Override
	public void bindData(OrthoCamera camera) {
		// TODO Auto-generated method stub
		
	}
	
}


