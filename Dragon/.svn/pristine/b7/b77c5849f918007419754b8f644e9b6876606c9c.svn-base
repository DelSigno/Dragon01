package com.dragon.android;

import com.circleavoidthesquares.android.R;
import com.dragon.android.CircleAvoidTheSquaresRenderer;

import android.app.Activity;
import android.app.ActivityManager;
import android.content.Context;
import android.content.SharedPreferences;
import android.content.pm.ConfigurationInfo;
import android.opengl.GLSurfaceView;
import android.os.Build;
import android.os.Bundle;
import android.view.Menu;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnTouchListener;
import android.widget.Toast;

public class CircleAvoidTheSquaresActivity extends Activity{

	

	
	//SURFACE and RENDERERS
	private GLSurfaceView glSurfaceView;
	private boolean rendererSet = false;
	private CircleAvoidTheSquaresRenderer catsRenderer;// = new CircleAvoidTheSquaresRenderer(this,catsPreferences);
	private CATSMainMenuRenderer mainMenuRenderer;// = new CircleAvoidTheSquaresRenderer(this,catsPreferences);

	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		
		catsRenderer = new CircleAvoidTheSquaresRenderer(this);
		
		glSurfaceView = new GLSurfaceView(this);
		
		//Gets device of emulator info and sets up check to ensure
		//OpenGL2.0 Compatible
		final ActivityManager activityManager = (ActivityManager) getSystemService(Context.ACTIVITY_SERVICE);
		final ConfigurationInfo configurationInfo = activityManager.getDeviceConfigurationInfo();	
		final boolean supportsEs2 = configurationInfo.reqGlEsVersion >= 0x20000 
				|| (Build.VERSION.SDK_INT >= Build.VERSION_CODES.ICE_CREAM_SANDWICH_MR1
				&& (Build.FINGERPRINT.startsWith("generic")
				|| Build.FINGERPRINT.startsWith("unknown")
				|| Build.MODEL.contains("google_sdk")
				|| Build.MODEL.contains("Emulator")
				|| Build.MODEL.contains("Android SDK built for x86")));
		
		
		if (supportsEs2) {
			// Request an OpenGL ES 2.0 compatible context.
			glSurfaceView.setEGLContextClientVersion(2);
			// Assign our renderer.
			glSurfaceView.setRenderer(catsRenderer);
			rendererSet = true;
		} else {
			Toast.makeText(this, "This device does not support OpenGL ES 2.0.",
			Toast.LENGTH_LONG).show();
			return;
		}
		
		//+++Sends touch commands to the glSurfaceView
		glSurfaceView.setOnTouchListener(new OnTouchListener() {
			@Override
			public boolean onTouch(View v, MotionEvent event) {
				if (event != null) {
					// Convert touch coordinates into normalized device
					// coordinates, keeping in mind that Android's Y
					// coordinates are inverted.
					final float normalizedX = (event.getX() / (float) v.getWidth()) * 2 - 1;
					final float normalizedY = -((event.getY() / (float) v.getHeight()) * 2 - 1);
					if (event.getAction() == MotionEvent.ACTION_DOWN) {
						glSurfaceView.queueEvent(new Runnable() {
							@Override
							public void run() {
								catsRenderer.handleTouchPress(normalizedX, normalizedY);
							}
						});
					} else if (event.getAction() == MotionEvent.ACTION_MOVE) {
						glSurfaceView.queueEvent(new Runnable() {
							@Override
							public void run() {
								catsRenderer.handleTouchDrag(normalizedX, normalizedY);
							}
						});
					}
					
					return true;
				} else {
					return false;
				}
			}
		});
		//---Finish sending in touch commands to glSurfaceView
		
		setContentView(glSurfaceView);
	}
	
	protected void onPause(){
		super.onPause();
		if (rendererSet){
			glSurfaceView.onPause();
		}
	}
	
	protected void onResume(){
		super.onResume();
		if (rendererSet){
			glSurfaceView.onResume();
		}
	}
	
}
